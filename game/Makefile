# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I. -Isrc -Iinclude -I../raylib-master/src -I../raylib-master/src/external -I../raylib-master/src/external/glfw/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_x64)
TARGETDIR = ../bin/Debug
TARGET = $(TARGETDIR)/RaylibTest.exe
OBJDIR = obj/x64/Debug
DEFINES += -DDEBUG -DPLATFORM_DESKTOP -DGRAPHICS_API_OPENGL_33 -D_WIN32
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c99
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20
LIBS += ../bin/Debug/raylib.lib -lwinmm -lgdi32
LDDEPS += ../bin/Debug/raylib.lib
ALL_LDFLAGS += $(LDFLAGS) -L../bin/Debug -L/usr/lib64 -m64

else ifeq ($(config),debug_x86)
TARGETDIR = ../bin/Debug
TARGET = $(TARGETDIR)/RaylibTest.exe
OBJDIR = obj/x86/Debug
DEFINES += -DDEBUG -DPLATFORM_DESKTOP -DGRAPHICS_API_OPENGL_33 -D_WIN32
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c99
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++20
LIBS += ../bin/Debug/raylib.lib -lwinmm -lgdi32
LDDEPS += ../bin/Debug/raylib.lib
ALL_LDFLAGS += $(LDFLAGS) -L../bin/Debug -L/usr/lib32 -m32

else ifeq ($(config),debug_arm64)
TARGETDIR = ../bin/Debug
TARGET = $(TARGETDIR)/RaylibTest.exe
OBJDIR = obj/ARM64/Debug
DEFINES += -DDEBUG -DPLATFORM_DESKTOP -DGRAPHICS_API_OPENGL_33 -D_WIN32
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g -std=c99
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g -std=c++20
LIBS += ../bin/Debug/raylib.lib -lwinmm -lgdi32
LDDEPS += ../bin/Debug/raylib.lib
ALL_LDFLAGS += $(LDFLAGS) -L../bin/Debug

else ifeq ($(config),release_x64)
TARGETDIR = ../bin/Release
TARGET = $(TARGETDIR)/RaylibTest.exe
OBJDIR = obj/x64/Release
DEFINES += -DNDEBUG -DPLATFORM_DESKTOP -DGRAPHICS_API_OPENGL_33 -D_WIN32
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c99
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20
LIBS += ../bin/Release/raylib.lib -lwinmm -lgdi32
LDDEPS += ../bin/Release/raylib.lib
ALL_LDFLAGS += $(LDFLAGS) -L../bin/Release -L/usr/lib64 -m64 -mwindows -s

else ifeq ($(config),release_x86)
TARGETDIR = ../bin/Release
TARGET = $(TARGETDIR)/RaylibTest.exe
OBJDIR = obj/x86/Release
DEFINES += -DNDEBUG -DPLATFORM_DESKTOP -DGRAPHICS_API_OPENGL_33 -D_WIN32
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c99
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++20
LIBS += ../bin/Release/raylib.lib -lwinmm -lgdi32
LDDEPS += ../bin/Release/raylib.lib
ALL_LDFLAGS += $(LDFLAGS) -L../bin/Release -L/usr/lib32 -m32 -mwindows -s

else ifeq ($(config),release_arm64)
TARGETDIR = ../bin/Release
TARGET = $(TARGETDIR)/RaylibTest.exe
OBJDIR = obj/ARM64/Release
DEFINES += -DNDEBUG -DPLATFORM_DESKTOP -DGRAPHICS_API_OPENGL_33 -D_WIN32
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -std=c99
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -std=c++20
LIBS += ../bin/Release/raylib.lib -lwinmm -lgdi32
LDDEPS += ../bin/Release/raylib.lib
ALL_LDFLAGS += $(LDFLAGS) -L../bin/Release -mwindows -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/raylib_game.o
GENERATED += $(OBJDIR)/Game.o
GENERATED += $(OBJDIR)/TextureManager.o
GENERATED += $(OBJDIR)/Player.o
GENERATED += $(OBJDIR)/CollisionBox.o
GENERATED += $(OBJDIR)/CollisionBoxManager.o
GENERATED += $(OBJDIR)/Tileset.o
GENERATED += $(OBJDIR)/TileObject.o
GENERATED += $(OBJDIR)/CharacterObject.o
GENERATED += $(OBJDIR)/Enemy.o
GENERATED += $(OBJDIR)/SpriteAnimation.o
# GENERATED += $(OBJDIR)/screen_ending.o
# GENERATED += $(OBJDIR)/screen_gameplay.o
# GENERATED += $(OBJDIR)/screen_logo.o
# GENERATED += $(OBJDIR)/screen_options.o
# GENERATED += $(OBJDIR)/screen_title.o
OBJECTS += $(OBJDIR)/raylib_game.o
OBJECTS += $(OBJDIR)/Game.o
OBJECTS += $(OBJDIR)/TextureManager.o
OBJECTS += $(OBJDIR)/Player.o
OBJECTS += $(OBJDIR)/CollisionBox.o
OBJECTS += $(OBJDIR)/CollisionBoxManager.o
OBJECTS += $(OBJDIR)/Tileset.o
OBJECTS += $(OBJDIR)/TileObject.o
OBJECTS += $(OBJDIR)/CharacterObject.o
OBJECTS += $(OBJDIR)/Enemy.o
OBJECTS += $(OBJDIR)/SpriteAnimation.o
# OBJECTS += $(OBJDIR)/screen_ending.o
# OBJECTS += $(OBJDIR)/screen_gameplay.o
# OBJECTS += $(OBJDIR)/screen_logo.o
# OBJECTS += $(OBJDIR)/screen_options.o
# OBJECTS += $(OBJDIR)/screen_title.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking RaylibTest
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning RaylibTest
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/raylib_game.o: src/raylib_game.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Game.o: src/Game.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TextureManager.o: src/TextureManager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Player.o: src/Player.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CollisionBox.o: src/CollisionBox.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CollisionBoxManager.o: src/CollisionBoxManager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Tileset.o: src/Tileset.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TileObject.o: src/TileObject.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CharacterObject.o: src/CharacterObject.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Enemy.o: src/Enemy.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SpriteAnimation.o: src/SpriteAnimation.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif